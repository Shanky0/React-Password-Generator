{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/Desktop/Frontend Task/Test/passwordgenrator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // State to hold password\n  const [password, setPassword] = useState(\"\");\n\n  const genrate = e => {\n    e.preventDefault();\n    const regx = \"/[A-Z][a-z][0-9][@]/\";\n    const smallLetter = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '@'];\n    const capitalLetter = [];\n    capitalLetter.push(smallLetter.map(val => val.toUpperCase()));\n    const number = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    var passw = \"\";\n\n    for (let i = 0; i < 7; i++) {\n      passw += capitalLetter[Math.floor(Math.random())];\n      passw += smallLetter[Math.floor(Math.random())];\n    }\n\n    console.log(passw);\n  };\n\n  const copy = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: genrate,\n        children: \"Click to Genrate Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"pass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: copy,\n        children: \"Click to Copy Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"pnVlovA7Sdar3UJLV5gCRQk1vwM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","password","setPassword","genrate","e","preventDefault","regx","smallLetter","capitalLetter","push","map","val","toUpperCase","number","passw","i","Math","floor","random","console","log","copy"],"sources":["/home/cedcoss/Desktop/Frontend Task/Test/passwordgenrator/src/App.js"],"sourcesContent":["\nimport { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n\n  // State to hold password\n  const [password,setPassword] = useState(\"\");\n\n  const genrate = (e)=>{\n    e.preventDefault();\n      const regx = \"/[A-Z][a-z][0-9][@]/\";\n      const smallLetter = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','@'];\n      const capitalLetter = [];\n      capitalLetter.push(smallLetter.map(val=> val.toUpperCase()));\n      const number = [0,1,2,3,4,5,6,7,8,9];\n      var passw=\"\";\n      for(let i=0;i<7;i++){\n         passw  += capitalLetter[Math.floor(Math.random())]\n         passw += smallLetter[Math.floor(Math.random())];\n      }\n      console.log(passw);\n\n     \n  }\n  const copy = (e)=>{\n    e.preventDefault();\n\n  }\n  return (\n    <>\n      <div className='container'>\n        <button onClick={genrate}>Click to Genrate Password</button>\n        <p id='pass'></p>\n        <button onClick={copy}>Click to Copy Password</button>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb;EACA,MAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBH,QAAQ,CAAC,EAAD,CAAvC;;EAEA,MAAMI,OAAO,GAAIC,CAAD,IAAK;IACnBA,CAAC,CAACC,cAAF;IACE,MAAMC,IAAI,GAAG,sBAAb;IACA,MAAMC,WAAW,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,EAAiC,GAAjC,EAAqC,GAArC,EAAyC,GAAzC,EAA6C,GAA7C,EAAiD,GAAjD,EAAqD,GAArD,EAAyD,GAAzD,EAA6D,GAA7D,EAAiE,GAAjE,EAAqE,GAArE,EAAyE,GAAzE,EAA6E,GAA7E,EAAiF,GAAjF,EAAqF,GAArF,EAAyF,GAAzF,EAA6F,GAA7F,EAAiG,GAAjG,EAAqG,GAArG,EAAyG,GAAzG,CAApB;IACA,MAAMC,aAAa,GAAG,EAAtB;IACAA,aAAa,CAACC,IAAd,CAAmBF,WAAW,CAACG,GAAZ,CAAgBC,GAAG,IAAGA,GAAG,CAACC,WAAJ,EAAtB,CAAnB;IACA,MAAMC,MAAM,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,CAAf;IACA,IAAIC,KAAK,GAAC,EAAV;;IACA,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoB;MACjBD,KAAK,IAAKN,aAAa,CAACQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,EAAX,CAAD,CAAvB;MACAJ,KAAK,IAAIP,WAAW,CAACS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,EAAX,CAAD,CAApB;IACF;;IACDC,OAAO,CAACC,GAAR,CAAYN,KAAZ;EAGH,CAfD;;EAgBA,MAAMO,IAAI,GAAIjB,CAAD,IAAK;IAChBA,CAAC,CAACC,cAAF;EAED,CAHD;;EAIA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAQ,OAAO,EAAEF,OAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAG,EAAE,EAAC;MAAN;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,OAAO,EAAEkB,IAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AASD;;GAlCQrB,G;;KAAAA,G;AAoCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}