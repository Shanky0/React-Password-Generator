{"ast":null,"code":"var _jsxFileName = \"/home/cedcoss/Desktop/Frontend Task/Test/passwordgenrator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // State to hold password\n  const [password, setPassword] = useState(\"\");\n\n  const genrate = e => {\n    e.preventDefault();\n    const regx = \"/[A-Z][a-z][0-9][@]/\";\n    const smallLetter = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '@'];\n    const capitalLetter = [];\n    capitalLetter.push(smallLetter.map(val => val.toUpperCase()));\n    const number = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    var passw = \"\";\n\n    for (let i = 4; i < 6; i++) {\n      passw += capitalLetter[Math.floor(Math.random())];\n\n      for (let j = 4; j < 6; j++) {\n        passw += smallLetter[Math.floor(Math.random() * i)];\n      }\n\n      for (let k = 3; k < 6; k++) {\n        passw += number[Math.floor(Math.random() * k)];\n      }\n    }\n\n    console.log(passw);\n  };\n\n  const copy = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: genrate,\n        children: \"Click to Genrate Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"pass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: copy,\n        children: \"Click to Copy Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"fsE4KjUtTGid/UZc9Uo/kD8+5F8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","password","setPassword","genrate","e","preventDefault","regx","smallLetter","capitalLetter","push","map","val","toUpperCase","number","passw","i","Math","floor","random","j","k","console","log","copy"],"sources":["/home/cedcoss/Desktop/Frontend Task/Test/passwordgenrator/src/App.js"],"sourcesContent":["\nimport { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n\n  // State to hold password\n  const [password, setPassword] = useState(\"\");\n\n  const genrate = (e) => {\n    e.preventDefault();\n    const regx = \"/[A-Z][a-z][0-9][@]/\";\n    const smallLetter = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '@'];\n    const capitalLetter = [];\n    capitalLetter.push(smallLetter.map(val => val.toUpperCase()));\n    const number = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    var passw = \"\";\n    for (let i = 4; i < 6; i++) {\n      passw += capitalLetter[Math.floor(Math.random())]\n      for (let j = 4; j < 6; j++) {\n        passw += smallLetter[Math.floor(Math.random()*i)]\n      }\n      for (let k = 3; k < 6; k++) {\n        passw += number[Math.floor(Math.random()*k)]\n      }\n    }\n    console.log(passw);\n\n\n  }\n  const copy = (e) => {\n    e.preventDefault();\n\n  }\n  return (\n    <>\n      <div className='container'>\n        <button onClick={genrate}>Click to Genrate Password</button>\n        <p id='pass'></p>\n        <button onClick={copy}>Click to Copy Password</button>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMI,OAAO,GAAIC,CAAD,IAAO;IACrBA,CAAC,CAACC,cAAF;IACA,MAAMC,IAAI,GAAG,sBAAb;IACA,MAAMC,WAAW,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE,EAAuE,GAAvE,EAA4E,GAA5E,EAAiF,GAAjF,EAAsF,GAAtF,EAA2F,GAA3F,EAAgG,GAAhG,EAAqG,GAArG,EAA0G,GAA1G,EAA+G,GAA/G,EAAoH,GAApH,EAAyH,GAAzH,EAA8H,GAA9H,EAAmI,GAAnI,CAApB;IACA,MAAMC,aAAa,GAAG,EAAtB;IACAA,aAAa,CAACC,IAAd,CAAmBF,WAAW,CAACG,GAAZ,CAAgBC,GAAG,IAAIA,GAAG,CAACC,WAAJ,EAAvB,CAAnB;IACA,MAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAAf;IACA,IAAIC,KAAK,GAAG,EAAZ;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;MAC1BD,KAAK,IAAIN,aAAa,CAACQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,EAAX,CAAD,CAAtB;;MACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;QAC1BL,KAAK,IAAIP,WAAW,CAACS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcH,CAAzB,CAAD,CAApB;MACD;;MACD,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;QAC1BN,KAAK,IAAID,MAAM,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcE,CAAzB,CAAD,CAAf;MACD;IACF;;IACDC,OAAO,CAACC,GAAR,CAAYR,KAAZ;EAGD,CApBD;;EAqBA,MAAMS,IAAI,GAAInB,CAAD,IAAO;IAClBA,CAAC,CAACC,cAAF;EAED,CAHD;;EAIA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAQ,OAAO,EAAEF,OAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAG,EAAE,EAAC;MAAN;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,OAAO,EAAEoB,IAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AASD;;GAvCQvB,G;;KAAAA,G;AAyCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}